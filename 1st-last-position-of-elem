class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>res = {-1,-1};
        int k=nums.size();
        if(nums.empty()==true){
            return res;}
        for(int i=0;i<k;i++){
            if(nums[i]==target){
                if(res[0]==-1){
                     res[0]=i;
                    }
                    else{
                      res[1]=i;}  
                }
              
                }
        if(res[1]==-1){
            res[1]=res[0];
        }
        return res;
        
    }
}; 

//Solution got accepted. 
//Runtime: 4 ms, faster than 95.68% of C++ online submissions for Find First and Last Position of Element in Sorted Array.
//Memory Usage: 13.7 MB, less than 64.61% of C++ online submissions for Find First and Last Position of Element in Sorted Array.
//Time Complexity: O(n) as there is one-for loop.
//Space Complexity: O(n) as extra vector res used.
